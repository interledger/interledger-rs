name: CI

# limit ci building to pushes to master not to get twice the notification email
# from github.
on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
  pull_request:
    branches: '*'

jobs:
  interledger:
    env:
      RUST_LOG: "interledger=trace"
      RUST_BACKTRACE: "full"

    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y redis-server redis-tools libssl-dev

      - name: Install rust toolchain
        uses: hecrj/setup-rust-action@v1.3.4
        with:
          rust-version: stable
          components: clippy, rustfmt

      - name: Cache
        uses: Swatinem/rust-cache@v1

      - name: Build
        run: cargo build --all-features --all-targets

      - name: Cargo fmt
        run: cargo fmt --all -- --check

      - name: Cargo clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Audit
        run: cargo audit --ignore RUSTSEC-2021-0113 --ignore RUSTSEC-2020-0071

      - name: Test
        run: timeout 15m cargo test --all --all-features

  interledger-packet:
    env:
      RUST_LOG: "interledger=trace"
      RUST_BACKTRACE: "full"

    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: hecrj/setup-rust-action@v1.3.4
        with:
          rust-version: stable

      - name: Cache
        uses: Swatinem/rust-cache@v1

      - name: Test
        run: timeout 15m cargo test -p interledger-packet
      - name: Test --features strict
        run: timeout 15m cargo test -p interledger-packet --features strict
      - name: Test --features roundtrip-only
        run: timeout 15m cargo test -p interledger-packet --features roundtrip-only

  interledger-stream:
    env:
      RUST_LOG: "interledger=trace"
      RUST_BACKTRACE: "full"

    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: hecrj/setup-rust-action@v1.3.4
        with:
          rust-version: stable

      - name: Cache
        uses: Swatinem/rust-cache@v1

      - name: Test
        run: timeout 15m cargo test -p interledger-stream
      - name: Test --features strict
        run: timeout 15m cargo test -p interledger-stream --features strict
      - name: Test --features roundtrip-only
        run: timeout 15m cargo test -p interledger-stream --features roundtrip-only

  interledger-btp:
    env:
      RUST_LOG: "interledger=trace"
      RUST_BACKTRACE: "full"

    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: hecrj/setup-rust-action@v1.3.4
        with:
          rust-version: stable

      - name: Cache
        uses: Swatinem/rust-cache@v1

      - name: Test
        run: timeout 15m cargo test -p interledger-btp
      - name: Test --features strict
        run: timeout 15m cargo test -p interledger-btp --features strict

  build:
    # Repo requires a `build` job to succeed in order to merge into master.
    # A step and runs-on is required for a job to be valid.
    needs: [interledger, interledger-packet, interledger-stream, interledger-btp]
    runs-on: ubuntu-latest
    steps:
      - name: Success
        run: echo "Success"

  settlement-engines:
    # This job builds the ethereum-settlement-engine required by `test-md`.
    # A separate job to enable dependency caching.
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          repository: interledger-rs/settlement-engines
          ref: master

      - name: Install rust toolchain
        uses: hecrj/setup-rust-action@v1.3.4
        with:
          rust-version: stable

      - name: Cache
        uses: Swatinem/rust-cache@v1

      - name: Build
        run: cargo build --bin ilp-settlement-ethereum

      - name: Upload settlement-engine artifact
        uses: actions/upload-artifact@v2
        with:
          name: settlement-engine
          path: target/debug/ilp-settlement-ethereum

  test-md:
    env:
      RUST_LOG: "interledger=trace"
      RUST_BACKTRACE: "full"

    needs: settlement-engines

    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: hecrj/setup-rust-action@v1.3.4
        with:
          rust-version: stable

      - name: Cache
        uses: Swatinem/rust-cache@v1

      - name: Build binaries
        run: |
          mkdir -p ~/.interledger/bin
          cargo build --bin ilp-node --bin ilp-cli
          mv target/debug/ilp-node ~/.interledger/bin
          mv target/debug/ilp-cli ~/.interledger/bin

      - name: Download settlement engine artifact
        uses: actions/download-artifact@v2
        with:
          name: settlement-engine
          path: ~/.interledger/bin

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y redis-server redis-tools libssl-dev

          # install components (ganache-cli ilp-settlement-xrp)
          npm install -g ganache-cli ilp-settlement-xrp

      - name: Test
        run: scripts/run-md-test.sh '^.*$' 2

      - name: 'Store artifacts'
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: run-md-test
          path: /tmp/run-md-test

